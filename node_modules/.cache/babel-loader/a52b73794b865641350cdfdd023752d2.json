{"ast":null,"code":"import * as React from \"react\";\nexport function withDeviceRatio() {\n  return OriginalComponent => {\n    return class WithRatio extends React.Component {\n      constructor() {\n        super(...arguments);\n        this.canvasRef = React.createRef();\n      }\n\n      componentDidMount() {\n        const {\n          current\n        } = this.canvasRef;\n\n        if (current === null) {\n          this.setState({\n            ratio: 1\n          });\n        } else {\n          const context = current.getContext(\"2d\");\n          const {\n            devicePixelRatio\n          } = window;\n          const backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n          this.setState({\n            ratio: devicePixelRatio / backingStoreRatio\n          });\n        }\n      }\n\n      render() {\n        const state = this.state;\n\n        if (state !== null) {\n          return React.createElement(OriginalComponent, Object.assign({}, this.props, {\n            ratio: state.ratio\n          }));\n        }\n\n        return React.createElement(\"canvas\", {\n          ref: this.canvasRef\n        });\n      }\n\n    };\n  };\n}","map":{"version":3,"sources":["../../src/utils/withDeviceRatio.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAUA,OAAM,SAAU,eAAV,GAAyB;AAC3B,SAAuC,iBAAhC,IAAmF;AACtF,WAAO,MAAM,SAAN,SAAwB,KAAK,CAAC,SAA9B,CAA8E;AAA9E,MAAA,WAAA,GAAA;;AACI,aAAA,SAAA,GAAY,KAAK,CAAC,SAAN,EAAZ;AAwCV;;AAtCU,MAAA,iBAAiB,GAAA;AACpB,cAAM;AAAE,UAAA;AAAF,YAAc,KAAK,SAAzB;;AACA,YAAI,OAAO,KAAK,IAAhB,EAAsB;AAClB,eAAK,QAAL,CAAc;AACV,YAAA,KAAK,EAAE;AADG,WAAd;AAGH,SAJD,MAIO;AACH,gBAAM,OAAO,GAAQ,OAAO,CAAC,UAAR,CAAmB,IAAnB,CAArB;AAEA,gBAAM;AAAE,YAAA;AAAF,cAAuB,MAA7B;AAEA,gBAAM,iBAAiB,GAAG,OAAO,CAAC,4BAAR,IACtB,OAAO,CAAC,yBADc,IAEtB,OAAO,CAAC,wBAFc,IAGtB,OAAO,CAAC,uBAHc,IAItB,OAAO,CAAC,sBAJc,IAIY,CAJtC;AAMA,eAAK,QAAL,CAAc;AACV,YAAA,KAAK,EAAE,gBAAgB,GAAG;AADhB,WAAd;AAGH;AACJ;;AAEM,MAAA,MAAM,GAAA;AAET,cAAM,KAAK,GAAG,KAAK,KAAnB;;AACA,YAAI,KAAK,KAAK,IAAd,EAAoB;AAChB,iBACI,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,KAAK,KADK,EACU;AACxB,YAAA,KAAK,EAAE,KAAK,CAAC;AADW,WADV,CAAlB,CADJ;AAKH;;AAED,eACI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,UAAA,GAAG,EAAE,KAAK;AAAlB,SAAA,CADJ;AAGH;;AAxCgF,KAArF;AA0CH,GA3CD;AA4CH","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nexport function withDeviceRatio() {\n    return (OriginalComponent) => {\n        return class WithRatio extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.canvasRef = React.createRef();\n            }\n            componentDidMount() {\n                const { current } = this.canvasRef;\n                if (current === null) {\n                    this.setState({\n                        ratio: 1,\n                    });\n                }\n                else {\n                    const context = current.getContext(\"2d\");\n                    const { devicePixelRatio } = window;\n                    const backingStoreRatio = context.webkitBackingStorePixelRatio ||\n                        context.mozBackingStorePixelRatio ||\n                        context.msBackingStorePixelRatio ||\n                        context.oBackingStorePixelRatio ||\n                        context.backingStorePixelRatio || 1;\n                    this.setState({\n                        ratio: devicePixelRatio / backingStoreRatio,\n                    });\n                }\n            }\n            render() {\n                const state = this.state;\n                if (state !== null) {\n                    return (React.createElement(OriginalComponent, Object.assign({}, this.props, { ratio: state.ratio })));\n                }\n                return (React.createElement(\"canvas\", { ref: this.canvasRef }));\n            }\n        };\n    };\n}\n//# sourceMappingURL=withDeviceRatio.js.map"]},"metadata":{},"sourceType":"module"}