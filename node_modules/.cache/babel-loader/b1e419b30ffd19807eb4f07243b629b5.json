{"ast":null,"code":"import * as React from \"react\";\nimport { isDefined } from \"./utils\";\nexport class CanvasContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawCanvas = {};\n\n    this.setDrawCanvas = node => {\n      if (isDefined(node)) {\n        this.drawCanvas[node.id] = node.getContext(\"2d\");\n      } else {\n        this.drawCanvas = {};\n      }\n    };\n  }\n\n  getCanvasContexts() {\n    if (isDefined(this.drawCanvas.axes)) {\n      return this.drawCanvas;\n    }\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      type,\n      zIndex,\n      ratio\n    } = this.props;\n\n    if (type === \"svg\") {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex\n      }\n    }, React.createElement(\"canvas\", {\n      id: \"bg\",\n      ref: this.setDrawCanvas,\n      width: width * ratio,\n      height: height * ratio,\n      style: {\n        position: \"absolute\",\n        width,\n        height\n      }\n    }), React.createElement(\"canvas\", {\n      id: \"axes\",\n      ref: this.setDrawCanvas,\n      width: width * ratio,\n      height: height * ratio,\n      style: {\n        position: \"absolute\",\n        width,\n        height\n      }\n    }), React.createElement(\"canvas\", {\n      id: \"mouseCoord\",\n      ref: this.setDrawCanvas,\n      width: width * ratio,\n      height: height * ratio,\n      style: {\n        position: \"absolute\",\n        width,\n        height\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["../src/CanvasContainer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,SAAT,QAA0B,SAA1B;AAUA,OAAM,MAAO,eAAP,SAA+B,KAAK,CAAC,SAArC,CAAoE;AAA1E,EAAA,WAAA,GAAA;;AAEY,SAAA,UAAA,GAAkB,EAAlB;;AAsCS,SAAA,aAAA,GAAiB,IAAD,IAA4B;AACzD,UAAI,SAAS,CAAC,IAAD,CAAb,EAAqB;AACjB,aAAK,UAAL,CAAgB,IAAI,CAAC,EAArB,IAA2B,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAA3B;AACH,OAFD,MAEO;AACH,aAAK,UAAL,GAAkB,EAAlB;AACH;AACJ,KANgB;AAOpB;;AA3CU,EAAA,iBAAiB,GAAA;AACpB,QAAI,SAAS,CAAC,KAAK,UAAL,CAAgB,IAAjB,CAAb,EAAqC;AACjC,aAAO,KAAK,UAAZ;AACH;AACJ;;AAEM,EAAA,MAAM,GAAA;AACT,UAAM;AAAE,MAAA,MAAF;AAAU,MAAA,KAAV;AAAiB,MAAA,IAAjB;AAAuB,MAAA,MAAvB;AAA+B,MAAA;AAA/B,QAAyC,KAAK,KAApD;;AACA,QAAI,IAAI,KAAK,KAAb,EAAoB;AAChB,aAAO,IAAP;AACH;;AAED,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAE;AAAE,QAAA,QAAQ,EAAE,UAAZ;AAAwB,QAAA;AAAxB;AAAZ,KAAA,EACI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACI,MAAA,EAAE,EAAC,IADP;AAEI,MAAA,GAAG,EAAE,KAAK,aAFd;AAGI,MAAA,KAAK,EAAE,KAAK,GAAG,KAHnB;AAII,MAAA,MAAM,EAAE,MAAM,GAAG,KAJrB;AAKI,MAAA,KAAK,EAAE;AAAE,QAAA,QAAQ,EAAE,UAAZ;AAAwB,QAAA,KAAxB;AAA+B,QAAA;AAA/B;AALX,KAAA,CADJ,EAOI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACI,MAAA,EAAE,EAAC,MADP;AAEI,MAAA,GAAG,EAAE,KAAK,aAFd;AAGI,MAAA,KAAK,EAAE,KAAK,GAAG,KAHnB;AAII,MAAA,MAAM,EAAE,MAAM,GAAG,KAJrB;AAKI,MAAA,KAAK,EAAE;AAAE,QAAA,QAAQ,EAAE,UAAZ;AAAwB,QAAA,KAAxB;AAA+B,QAAA;AAA/B;AALX,KAAA,CAPJ,EAaI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACI,MAAA,EAAE,EAAC,YADP;AAEI,MAAA,GAAG,EAAE,KAAK,aAFd;AAGI,MAAA,KAAK,EAAE,KAAK,GAAG,KAHnB;AAII,MAAA,MAAM,EAAE,MAAM,GAAG,KAJrB;AAKI,MAAA,KAAK,EAAE;AAAE,QAAA,QAAQ,EAAE,UAAZ;AAAwB,QAAA,KAAxB;AAA+B,QAAA;AAA/B;AALX,KAAA,CAbJ,CADJ;AAsBH;;AAtCqE","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nimport { isDefined } from \"./utils\";\nexport class CanvasContainer extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.drawCanvas = {};\n        this.setDrawCanvas = (node) => {\n            if (isDefined(node)) {\n                this.drawCanvas[node.id] = node.getContext(\"2d\");\n            }\n            else {\n                this.drawCanvas = {};\n            }\n        };\n    }\n    getCanvasContexts() {\n        if (isDefined(this.drawCanvas.axes)) {\n            return this.drawCanvas;\n        }\n    }\n    render() {\n        const { height, width, type, zIndex, ratio } = this.props;\n        if (type === \"svg\") {\n            return null;\n        }\n        return (React.createElement(\"div\", { style: { position: \"absolute\", zIndex } },\n            React.createElement(\"canvas\", { id: \"bg\", ref: this.setDrawCanvas, width: width * ratio, height: height * ratio, style: { position: \"absolute\", width, height } }),\n            React.createElement(\"canvas\", { id: \"axes\", ref: this.setDrawCanvas, width: width * ratio, height: height * ratio, style: { position: \"absolute\", width, height } }),\n            React.createElement(\"canvas\", { id: \"mouseCoord\", ref: this.setDrawCanvas, width: width * ratio, height: height * ratio, style: { position: \"absolute\", width, height } })));\n    }\n}\n//# sourceMappingURL=CanvasContainer.js.map"]},"metadata":{},"sourceType":"module"}