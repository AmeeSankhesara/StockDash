{"ast":null,"code":"import { scaleLinear } from \"d3-scale\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { find, noop } from \"./utils\";\nimport { PureComponent } from \"./utils/PureComponent\";\nexport class Chart extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.yScale = this.yScale.bind(this);\n    this.listener = this.listener.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n    const {\n      subscribe\n    } = this.context;\n    subscribe(`chart_${id}`, {\n      listener: this.listener\n    });\n  }\n\n  componentWillUnmount() {\n    const {\n      id\n    } = this.props;\n    const {\n      unsubscribe\n    } = this.context;\n    unsubscribe(`chart_${id}`);\n  }\n\n  listener(type, moreProps, state, e) {\n    const {\n      id,\n      onContextMenu\n    } = this.props;\n\n    if (type === \"contextmenu\") {\n      const {\n        currentCharts\n      } = moreProps;\n\n      if (currentCharts.indexOf(id) > -1) {\n        if (onContextMenu !== undefined) {\n          onContextMenu(moreProps, e);\n        }\n      }\n    }\n  }\n\n  yScale() {\n    const chartConfig = find(this.context.chartConfig, each => each.id === this.props.id);\n    return chartConfig.yScale.copy();\n  }\n\n  getChildContext() {\n    const {\n      id: chartId\n    } = this.props;\n    const chartConfig = find(this.context.chartConfig, each => each.id === chartId);\n    return {\n      chartId,\n      chartConfig\n    };\n  }\n\n  render() {\n    const {\n      origin\n    } = find(this.context.chartConfig, each => each.id === this.props.id);\n    const [x, y] = origin;\n    return React.createElement(\"g\", {\n      transform: `translate(${x}, ${y})`\n    }, this.props.children);\n  }\n\n}\nChart.defaultProps = {\n  id: 0,\n  origin: [0, 0],\n  padding: 0,\n  yScale: scaleLinear(),\n  flipYScale: false,\n  yPan: true,\n  yPanEnabled: false,\n  onContextMenu: noop\n};\nChart.contextTypes = {\n  chartConfig: PropTypes.array,\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired\n};\nChart.childContextTypes = {\n  chartConfig: PropTypes.object.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n};","map":{"version":3,"sources":["../src/Chart.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { scaleLinear } from \"d3-scale\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { find, noop, } from \"./utils\";\nimport { PureComponent } from \"./utils/PureComponent\";\nexport class Chart extends PureComponent {\n    constructor(props, context) {\n        super(props, context);\n        this.yScale = this.yScale.bind(this);\n        this.listener = this.listener.bind(this);\n    }\n    componentDidMount() {\n        const { id } = this.props;\n        const { subscribe } = this.context;\n        subscribe(`chart_${id}`, {\n            listener: this.listener,\n        });\n    }\n    componentWillUnmount() {\n        const { id } = this.props;\n        const { unsubscribe } = this.context;\n        unsubscribe(`chart_${id}`);\n    }\n    listener(type, moreProps, state, e) {\n        const { id, onContextMenu } = this.props;\n        if (type === \"contextmenu\") {\n            const { currentCharts } = moreProps;\n            if (currentCharts.indexOf(id) > -1) {\n                if (onContextMenu !== undefined) {\n                    onContextMenu(moreProps, e);\n                }\n            }\n        }\n    }\n    yScale() {\n        const chartConfig = find(this.context.chartConfig, (each) => each.id === this.props.id);\n        return chartConfig.yScale.copy();\n    }\n    getChildContext() {\n        const { id: chartId } = this.props;\n        const chartConfig = find(this.context.chartConfig, (each) => each.id === chartId);\n        return {\n            chartId,\n            chartConfig,\n        };\n    }\n    render() {\n        const { origin } = find(this.context.chartConfig, (each) => each.id === this.props.id);\n        const [x, y] = origin;\n        return (React.createElement(\"g\", { transform: `translate(${x}, ${y})` }, this.props.children));\n    }\n}\nChart.defaultProps = {\n    id: 0,\n    origin: [0, 0],\n    padding: 0,\n    yScale: scaleLinear(),\n    flipYScale: false,\n    yPan: true,\n    yPanEnabled: false,\n    onContextMenu: noop,\n};\nChart.contextTypes = {\n    chartConfig: PropTypes.array,\n    subscribe: PropTypes.func.isRequired,\n    unsubscribe: PropTypes.func.isRequired,\n};\nChart.childContextTypes = {\n    chartConfig: PropTypes.object.isRequired,\n    chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n//# sourceMappingURL=Chart.js.map"]},"metadata":{},"sourceType":"module"}