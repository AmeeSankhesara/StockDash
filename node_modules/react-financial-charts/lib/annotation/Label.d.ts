import * as PropTypes from "prop-types";
import * as React from "react";
interface LabelProps {
    readonly className?: string;
    readonly selectCanvas?: any;
    readonly text?: string | any;
    readonly textAnchor?: string;
    readonly fontFamily?: string;
    readonly fontSize?: number;
    readonly opacity?: number;
    readonly rotate?: number;
    readonly onClick?: any;
    readonly xAccessor?: any;
    readonly xScale?: any;
    readonly yScale?: any;
    readonly datum?: object;
    readonly x?: number | any;
    readonly y?: number | any;
}
export declare class Label extends React.Component<LabelProps> {
    static defaultProps: {
        textAnchor: string;
        fontFamily: string;
        fontSize: number;
        fill: string;
        opacity: number;
        rotate: number;
        x: ({ xScale, xAccessor, datum }: {
            xScale: any;
            xAccessor: any;
            datum: any;
        }) => any;
        selectCanvas: (canvases: any) => any;
    };
    static contextTypes: {
        canvasOriginX: PropTypes.Requireable<number>;
        canvasOriginY: PropTypes.Requireable<number>;
        margin: PropTypes.Validator<object>;
        ratio: PropTypes.Validator<number>;
    };
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly renderSVG;
}
export {};
