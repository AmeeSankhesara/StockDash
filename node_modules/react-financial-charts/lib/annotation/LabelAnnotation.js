import * as React from "react";
import { functor } from "../utils";
export class LabelAnnotation extends React.Component {
    constructor() {
        super(...arguments);
        this.handleClick = (e) => {
            const { onClick } = this.props;
            if (onClick) {
                const { xScale, yScale, datum } = this.props;
                onClick({ xScale, yScale, datum }, e);
            }
        };
    }
    render() {
        const { className, textAnchor, fontFamily, fontSize, opacity, rotate } = this.props;
        const { xAccessor, xScale, yScale } = this.props;
        const { xPos, yPos, fill, text, tooltip } = helper(this.props, xAccessor, xScale, yScale);
        return (React.createElement("g", { className: className },
            React.createElement("title", null, tooltip),
            React.createElement("text", { x: xPos, y: yPos, fontFamily: fontFamily, fontSize: fontSize, fill: fill, opacity: opacity, transform: `rotate(${rotate}, ${xPos}, ${yPos})`, onClick: this.handleClick, textAnchor: textAnchor }, text)));
    }
}
LabelAnnotation.defaultProps = {
    className: "react-financial-charts-labelannotation",
    textAnchor: "middle",
    fontFamily: "-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif",
    fontSize: 12,
    fill: "#000000",
    opacity: 1,
    rotate: 0,
    x: ({ xScale, xAccessor, datum }) => xScale(xAccessor(datum)),
};
export const helper = (props, xAccessor, xScale, yScale) => {
    const { x, y, datum, fill, text, tooltip, plotData } = props;
    const xFunc = functor(x);
    const yFunc = functor(y);
    const [xPos, yPos] = [xFunc({ xScale, xAccessor, datum, plotData }), yFunc({ yScale, datum, plotData })];
    return {
        xPos,
        yPos,
        text: functor(text)(datum),
        fill: functor(fill)(datum),
        tooltip: functor(tooltip)(datum),
    };
};
//# sourceMappingURL=LabelAnnotation.js.map