import * as React from "react";
interface AxisZoomCaptureProps {
    readonly innerTickSize?: number;
    readonly outerTickSize?: number;
    readonly tickFormat?: any;
    readonly tickPadding?: number;
    readonly tickSize?: number;
    readonly ticks?: number;
    readonly tickValues?: number[];
    readonly showDomain?: boolean;
    readonly showTicks?: boolean;
    readonly className?: string;
    readonly axisZoomCallback?: any;
    readonly inverted?: boolean;
    readonly bg: {
        h: number;
        x: number;
        w: number;
        y: number;
    };
    readonly zoomCursorClassName?: string;
    readonly getMoreProps: any;
    readonly getScale: any;
    readonly getMouseDelta: any;
    readonly onDoubleClick: any;
    readonly onContextMenu: any;
}
interface AxisZoomCaptureState {
    startPosition: any | null;
}
export declare class AxisZoomCapture extends React.Component<AxisZoomCaptureProps, AxisZoomCaptureState> {
    static defaultProps: {
        onDoubleClick: () => void;
        onContextMenu: () => void;
        inverted: boolean;
    };
    private node;
    private mouseInteraction;
    private clicked;
    private dragHappened;
    constructor(props: any);
    render(): JSX.Element;
    private readonly handleDragEnd;
    private readonly handleDrag;
    private readonly handleDragStartTouch;
    private readonly handleDragStartMouse;
    private readonly handleRightClick;
    private readonly saveNode;
}
export {};
