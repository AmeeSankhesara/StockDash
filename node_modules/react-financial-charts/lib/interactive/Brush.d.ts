import * as React from "react";
import { strokeDashTypes } from "../utils";
interface BrushProps {
    readonly enabled: boolean;
    readonly onStart: any;
    readonly onBrush: any;
    readonly type?: "1D" | "2D";
    readonly stroke?: string;
    readonly fill?: string;
    readonly strokeOpacity?: number;
    readonly fillOpacity?: number;
    readonly interactiveState: object;
    readonly strokeDashArray?: strokeDashTypes;
}
interface BrushState {
    end?: any;
    rect: any | null;
    selected?: boolean;
    start?: any;
    x1y1?: any;
}
export declare class Brush extends React.Component<BrushProps, BrushState> {
    static defaultProps: {
        type: string;
        stroke: string;
        fillOpacity: number;
        strokeOpacity: number;
        fill: string;
        onBrush: () => void;
        onStart: () => void;
        strokeDashArray: string;
    };
    private zoomHappening?;
    constructor(props: BrushProps, context: any);
    terminate(): void;
    render(): JSX.Element | null;
    private readonly drawOnCanvas;
    private readonly handleZoomStart;
    private readonly handleDrawSquare;
    private readonly handleZoomComplete;
    private readonly renderSVG;
}
export {};
