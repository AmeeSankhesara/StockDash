import * as React from "react";
interface StandardDeviationChannelProps {
    readonly enabled: boolean;
    readonly snapTo?: any;
    readonly onStart?: any;
    readonly onComplete: any;
    readonly onSelect?: any;
    readonly currentPositionStroke?: string;
    readonly currentPositionStrokeWidth?: number;
    readonly currentPositionOpacity?: number;
    readonly currentPositionRadius?: number;
    readonly appearance: {
        stroke?: string;
        strokeOpacity?: number;
        strokeWidth?: number;
        fill?: string;
        fillOpacity?: number;
        edgeStrokeWidth?: number;
        edgeStroke?: string;
        edgeFill?: string;
        r?: number;
    };
    readonly hoverText: object;
    readonly channels: any[];
}
interface StandardDeviationChannelState {
    current?: any;
    override?: any;
}
export declare class StandardDeviationChannel extends React.Component<StandardDeviationChannelProps, StandardDeviationChannelState> {
    static defaultProps: {
        snapTo: (d: any) => any;
        appearance: {
            stroke: string;
            fillOpacity: number;
            strokeOpacity: number;
            strokeWidth: number;
            fill: string;
            edgeStrokeWidth: number;
            edgeStroke: string;
            edgeFill: string;
            r: number;
        };
        onStart: () => void;
        onComplete: () => void;
        onSelect: () => void;
        currentPositionStroke: string;
        currentPositionOpacity: number;
        currentPositionStrokeWidth: number;
        currentPositionRadius: number;
        hoverText: {
            enable: boolean;
            bgHeight: string;
            bgWidth: string;
            text: string;
            selectedText: string;
            fontFamily: string;
            fontSize: number;
            fill: string;
            bgFill: string;
            bgOpacity: number;
        };
        channels: never[];
    };
    private getSelectionState;
    private mouseMoved;
    private saveNodeType;
    private terminate;
    constructor(props: any);
    render(): JSX.Element;
    private handleEnd;
    private readonly handleStart;
    private readonly handleDrawLine;
    private readonly handleDragLineComplete;
    private readonly handleDragLine;
}
export {};
