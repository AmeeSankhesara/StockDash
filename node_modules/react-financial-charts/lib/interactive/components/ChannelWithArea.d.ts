import * as React from "react";
interface ChannelWithAreaProps {
    readonly startXY?: number[];
    readonly endXY?: number[];
    readonly dy?: number;
    readonly interactiveCursorClass?: string;
    readonly stroke: string;
    readonly strokeWidth: number;
    readonly fill: string;
    readonly fillOpacity: number;
    readonly strokeOpacity: number;
    readonly type: "XLINE" | // extends from -Infinity to +Infinity
    "RAY" | // extends to +/-Infinity in one direction
    "LINE";
    readonly onDragStart: any;
    readonly onDrag: any;
    readonly onDragComplete: any;
    readonly onHover?: any;
    readonly onUnHover?: any;
    readonly defaultClassName?: string;
    readonly tolerance: number;
    readonly selected: boolean;
}
export declare class ChannelWithArea extends React.Component<ChannelWithAreaProps> {
    static defaultProps: {
        onDragStart: () => void;
        onDrag: () => void;
        onDragComplete: () => void;
        type: string;
        strokeWidth: number;
        tolerance: number;
        selected: boolean;
    };
    render(): JSX.Element;
    private readonly renderSVG;
    private readonly drawOnCanvas;
    private readonly isHover;
}
export {};
