import * as React from "react";
interface InteractiveTextProps {
    readonly bgFill: string;
    readonly bgOpacity: number;
    readonly bgStrokeWidth: number;
    readonly bgStroke: string;
    readonly textFill: string;
    readonly fontFamily: string;
    readonly fontSize: number;
    readonly fontWeight: number | string;
    readonly fontStyle: string;
    readonly text: string;
    readonly onDragStart: any;
    readonly onDrag: any;
    readonly onDragComplete: any;
    readonly onHover?: any;
    readonly onUnHover?: any;
    readonly position?: any;
    readonly defaultClassName?: string;
    readonly interactiveCursorClass?: string;
    readonly tolerance: number;
    readonly selected: boolean;
}
export declare class InteractiveText extends React.Component<InteractiveTextProps> {
    static defaultProps: {
        onDragStart: () => void;
        onDrag: () => void;
        onDragComplete: () => void;
        type: string;
        fontWeight: string;
        tolerance: number;
        selected: boolean;
    };
    private calculateTextWidth;
    private textWidth;
    UNSAFE_componentWillReceiveProps(nextProps: any): void;
    render(): JSX.Element;
    private readonly isHover;
    private readonly drawOnCanvas;
    private readonly renderSVG;
    private readonly helper;
}
export {};
