import * as React from "react";
interface EachEquidistantChannelProps {
    readonly startXY: number[];
    readonly endXY: number[];
    readonly dy?: number;
    readonly interactive: boolean;
    readonly selected: boolean;
    readonly hoverText: {
        enable: boolean;
        fontFamily: string;
        fontSize: number;
        fill: string;
        text: string;
        bgFill: string;
        bgOpacity: number;
        bgWidth: number | string;
        bgHeight: number | string;
    };
    readonly appearance: {
        stroke: string;
        fillOpacity: number;
        strokeOpacity: number;
        strokeWidth: number;
        fill: string;
        edgeStroke: string;
        edgeFill: string;
        edgeFill2: string;
        edgeStrokeWidth: number;
        r: number;
    };
    readonly index?: number;
    readonly onDrag: any;
    readonly onDragComplete: any;
}
interface EachEquidistantChannelState {
    hover: boolean;
}
export declare class EachEquidistantChannel extends React.Component<EachEquidistantChannelProps, EachEquidistantChannelState> {
    static defaultProps: {
        yDisplayFormat: (d: any) => any;
        interactive: boolean;
        selected: boolean;
        onDrag: () => void;
        onDragComplete: () => void;
        hoverText: {
            enable: boolean;
        };
    };
    private dragStart;
    private isHover;
    private saveNodeType;
    constructor(props: EachEquidistantChannelProps);
    render(): JSX.Element;
    private readonly getEdgeCircle;
    private readonly handleChannelHeightChange;
    private readonly handleLine1Edge2Drag;
    private readonly handleLine1Edge1Drag;
    private readonly handleChannelDrag;
    private readonly handleDragStart;
    private readonly handleHover;
}
export {};
