/// <reference types="d3-format" />
import * as React from "react";
import { default as defaultDisplayValuesFor } from "./displayValuesFor";
interface OHLCTooltipProps {
    readonly className?: string;
    readonly accessor?: any;
    readonly xDisplayFormat?: any;
    readonly children?: any;
    readonly volumeFormat?: any;
    readonly percentFormat?: any;
    readonly ohlcFormat?: any;
    readonly origin?: number[] | any;
    readonly fontFamily?: string;
    readonly fontSize?: number;
    readonly onClick?: ((event: React.MouseEvent<SVGGElement, MouseEvent>) => void);
    readonly displayValuesFor?: any;
    readonly textFill?: string;
    readonly labelFill?: string;
    readonly displayTexts?: any;
    readonly lastAsDefault?: boolean;
}
export declare class OHLCTooltip extends React.Component<OHLCTooltipProps> {
    static defaultProps: {
        accessor: (d: any) => {
            date: any;
            open: any;
            high: any;
            low: any;
            close: any;
            volume: any;
        };
        xDisplayFormat: (date: Date) => string;
        volumeFormat: (n: number | {
            valueOf(): number;
        }) => string;
        percentFormat: (n: number | {
            valueOf(): number;
        }) => string;
        ohlcFormat: (n: number | {
            valueOf(): number;
        }) => string;
        displayValuesFor: typeof defaultDisplayValuesFor;
        origin: number[];
        children: (props: any, _: any, itemsToDisplay: any) => JSX.Element;
        displayTexts: {
            o: string;
            h: string;
            l: string;
            c: string;
            v: string;
            na: string;
        };
        lastAsDefault: boolean;
    };
    render(): JSX.Element;
    private readonly renderSVG;
}
export {};
