/// <reference types="d3-format" />
import * as React from "react";
import { default as defaultDisplayValuesFor } from "./displayValuesFor";
interface SingleValueTooltipProps {
    readonly xDisplayFormat?: any;
    readonly yDisplayFormat: any;
    readonly xInitDisplay?: string;
    readonly yInitDisplay?: string;
    readonly xLabel?: string;
    readonly yLabel: string;
    readonly labelFill?: string;
    readonly valueFill?: string;
    readonly origin?: number[] | any;
    readonly className?: string;
    readonly fontFamily?: string;
    readonly fontSize?: number;
    readonly onClick?: ((event: React.MouseEvent<SVGGElement, MouseEvent>) => void);
    readonly displayValuesFor?: any;
    readonly xAccessor?: (d: any) => any;
    readonly yAccessor?: (d: any) => any;
}
export declare class SingleValueTooltip extends React.Component<SingleValueTooltipProps> {
    static defaultProps: {
        origin: number[];
        labelFill: string;
        valueFill: string;
        yDisplayFormat: (n: number | {
            valueOf(): number;
        }) => string;
        displayValuesFor: typeof defaultDisplayValuesFor;
        xAccessor: () => void;
        yAccessor: (d: any) => any;
        xInitDisplay: string;
        yInitDisplay: string;
        className: string;
    };
    render(): JSX.Element;
    private readonly renderSVG;
}
export {};
